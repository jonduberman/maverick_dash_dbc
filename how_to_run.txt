1. make a directory for everything
2. clone your app directory into that directory
3. make a virtual environment in your app's directory
4. activate that environment, pip install packages from your requirements.txt
5. test with gunicorn --bind 0.0.0.0:8050 app:server or whatever port you set it to
6. move to a production port ideally


1. navigate to the folder where your app.py is

make a virtual environment and activate it, then install your packages
python3 -m venv env; source env/bin/activate


use this to run your server for testing
gunicorn --bind 0.0.0.0:8050 app:server





                                                                                     dashapp.service                                                                                                
[Unit]
Description=Gunicorn daemon to serve my dashapp
After=network.target

[Service]
User=ec2-user
Group=www-data
WorkingDirectory=/home/ec2-user/viz/maverick_dash_dbc
Environment="PATH=/home/ec2-user/viz/maverick_dash_dbc/env/bin"
ExecStart=/home/ec2-user/viz/maverick_dash_dbc/env/bin/gunicorn --workers 3 --bind unix:maverick_dash_dbc.sock -m 007 app:server

[Install]
WantedBy=multi-user.target

for nginx server configuration:

/etc/nginx/sites-available/app

server {
 listen 80;
 server_name ec2-3-22-241-9.us-east-2.compute.amazonaws.com;

 location / {
    include proxy_params;
 proxy_pass http://unix:/home/ec2-user/viz/maverick_dash_dbc/maverick_dash_dbc.sock;
 }
}


linking sites-available and sites-enabled 
sudo ln -s /etc/nginx/sites-available/myproject /etc/nginx/sites-enabled



[Unit]
Description=Gunicorn instance to serve maverick_dash_dbc
After=network.target

[Service]
WorkingDirectory=/home/ec2-user/viz/maverick_dash_dbc
Environment="PATH=/home/ec2-user/viz/maverick_dash_dbc/env/bin"
ExecStart=/home/ec2-user/viz/maverick_dash_dbc/env/bin/gunicorn --workers 3 $


[Install]
WantedBy=multi-user.target